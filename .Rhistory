test <- sapply(data$Terms, function(terms) {
if (grep(terms,reply_query.df$text[1]) == TRUE) {
print(1)
}
else print(0)
} )
grep(terms,reply_query.df$text[1]) == TRUE
grepl(terms,reply_query.df$text[1]) == TRUE
grepl(terms,reply_query.df$text[1])
grepl(data$Terms,reply_query.df$text[1])
View(reply_query.df)
grepl(data$Terms[1],reply_query.df$text[1])
grepl(data$Terms[2],reply_query.df$text[1])
View(reply_query.df)
grepl(data$Terms[187],reply_query.df$text[1])
grepl(data$Terms[187],reply_query.df$text[1]) == TRUE
grepl(data$Terms[1],reply_query.df$text[1]) == TRUE
test <- sapply(data$Terms, function(terms) {
if (grepl(terms,reply_query.df$text[1]) == TRUE) {
print(1)
}
else print(0)
} )
test <- sapply(data$Terms, function(terms) {
if (grepl(terms,reply_query.df$text[1]) == TRUE) {
print(1) stop()
}
else print(0)
} )
test <- sapply(data$Terms, function(terms) {
if (grepl(terms,reply_query.df$text[1]) == TRUE) {
print(1) stop(){}
}
else print(0)
} )
test <- sapply(data$Terms, function(terms) {
if (grepl(terms,reply_query.df$text[1]) == TRUE) {
print(1) stop(){}
test <- sapply(data$Terms, function(terms) {
if (grepl(terms,reply_query.df$text[1]) == TRUE) {
print(1) stop
test <- sapply(data$Terms, function(terms) {
if (grepl(terms,reply_query.df$text[1]) == TRUE) {
print(1) break
grepl(terms,reply_query.df$text[1]
)
grepl(data$Terms,reply_query.df$text[1])
grepl(data$Terms[2],reply_query.df$text[1])
grepl(data$Terms,"dingo")
?grepl
grep(data$Terms, reply_query.df$text[1])
test <- sapply(data$Terms, function(terms) {
sum(grep(data$Terms, reply_query.df$text[1]))
if (grepl(terms,reply_query.df$text[1]) == TRUE) {
print(1)
}
else if (grepl(terms,reply_query.df$text[1]) == FALSE) {
}
else print(0)
} )
test
test <- sapply(data$Terms, function(terms) {
if (grepl(terms,reply_query.df$text[1]) == TRUE) {
print(1)
}
else if (grepl(terms,reply_query.df$text[1]) == FALSE) {
}
else print(0)
} )
test <- sapply(data$Terms, function(terms) {
if (grepl(terms,reply_query.df$text[1]) == TRUE) {
print(1)
}
else print(0)
} )
test <- sapply(data$Terms, function(terms) {
if (grepl(terms,reply_query.df$text[1]) == TRUE) {
print(1)
}
else if (sum(grep(terms,reply_query.df$text[1])) > 0) {
print(1.5)
}
else print(0)
} )
test <- sapply(data$Terms, function(terms) {
if (grepl(terms,reply_query.df$text[1]) == TRUE) {
print(1)
}
else if (sum(grep(terms,reply_query.df$text[1])) > 0) {
print(1.5)
}
} )
grepl(data$Terms,reply_query.df$text[1]) == TRUE
test <- sapply(data$Terms, function(terms) {
holder <- grepl(terms,reply_query.df$text[1])
if (grepl(terms,reply_query.df$text[1]) == TRUE) {
print(1)
}
else if (grepl(terms,reply_query.df$text[1]) == FALSE) {
}
else print(0)
} )
holder
test <- sapply(data$Terms, function(terms) {
holder <- grepl(terms,reply_query.df$text[1])
} )
holder
test
test == true
test == TRUE
test[]
all.equal(test,FALSE)
all.equal(test,TRUE)
all.equal(test[2],TRUE)
all.equal(test[1],TRUE)
all.equal(test,TRUE)
?all.equal
isTRUE(test)
isFalse(test)
identical(test, FALSE)
identical(test, TRUE)
test <- sapply(data$Terms, function(terms) {
grepl(terms,"testing")
} )
identical(test, TRUE)
identical(test, FALSE)
test
identical(test[-1], FALSE)
identical(test[-1], TRUE)
test[-1]
test[-1,]
test[,-1]
rand <- sample(1:length(data$Terms[, 1]), replace = TRUE)
rand <- sample(1:length(data$Terms[1]), replace = TRUE)
reand
rand
rand
rand <- sample(1:length(data$Terms[, 1]), 1, replace = TRUE)
rand <- sample(1:length(data[, 1]), 1, replace = TRUE)
rand
guardian.keyword <- data[rand,1]
guardian.keyword
rand <- sample(1:length(data[, 1]), 1, replace = TRUE)
guardian.keyword <- data[rand,1]
guardian.keyword
guardian.frame <- data.frame(get_guardian(guardian.keyword, json, "2016-07-15", "2016-08-07", guardian_key))
gsub("\\s+", "+", guardian.keyword)
gsub("\\s*", "+", guardian.keyword)
gsub("\\s+", "+", guardian.keyword)
gsub("\\s+", "+", "the dog jumped")
gsub("\\s+", "+", guardian.keyword)
keyword <- data[rand,1]
guardian.keyword <- gsub("\\s+", "+", keyword)
guardian.frame <- data.frame(get_guardian(guardian.keyword, json, "2016-07-15", "2016-08-07", guardian_key))
keyword
rand <- sample(1:length(data[, 1]), 1, replace = TRUE)
keyword <- data[rand,1]
keywrod
keyword
guardian.keyword <- gsub("\\s+", "+", keyword)
guardian.frame <- data.frame(get_guardian(guardian.keyword, json, "2016-07-15", "2016-08-07", guardian_key))
Sys.Date()
Sys.Date()-1
Sys.Date()-30
guardian.frame <- data.frame(get_guardian(guardian.keyword, json, Sys.Date-30, Sys.Date(), guardian_key))
start.date <- Sys.Date()-30
end.date <- Sys.Date()
guardian.frame <- data.frame(get_guardian(guardian.keyword, json, start.date, end.date, guardian_key))
start.date <- Sys.Date()-15
end.date <- Sys.Date()
guardian.frame <- data.frame(get_guardian(guardian.keyword, json, start.date, end.date, guardian_key))
rand <- sample(1:length(data[, 1]), 1, replace = TRUE)
keyword <- data[rand,1]
guardian.keyword <- gsub("\\s+", "+", keyword)
start.date <- Sys.Date()-15
end.date <- Sys.Date()
guardian.frame <- data.frame(get_guardian(guardian.keyword, json, start.date, end.date, guardian_key))
grepl(data$Terms,reply_query.df$text[1]
)
grepl(data,reply_query.df$text[1]
)
test <- sapply(data$Terms, function(term) {
if (grepl(term,reply_query.df$text[1]) == TRUE) {
print(1)
}
else if (!any(grepl(term,reply_query.df$text[1]) == TRUE)) {
print(0)
}
} )
?grepl
test
sum(test)
test <- sapply(data$Terms, function(term) {
if (grepl(term,jo) == TRUE) {
print(1)
}
} )
test <- sapply(data$Terms, function(term) {
if (grepl(term,"jo") == TRUE) {
print(1)
}
} )
sum(test)
View(guardian.frame)
article_headline <- guardian.frame$headline[2]
article_link <- guardian.frame$webUrl[2]
article_full <- paste(article_headline, article_link, sep = " - ")
tweet(article_full)
article_full
article_link <- guardian.frame$webUrl[2]
tweet(article_link)
as.character(article_link <- guardian.frame$webUrl[2])
tweet(article_link)
aarticle_link <- as.character(guardian.frame$webUrl[2])
tweet(article_link)
article_link
article_link <- guardian.frame$webUrl[2]
article_full <- paste(article_link)
tweet(article_full)
data <- read.csv("terms_library.csv")
View(data)
View(data)
head(data)
View(data)
data <- data[-1,]
data <- read.csv("terms_library.csv")
data <- read.csv("terms_library.csv")
rm(data)
data <- read.csv("terms_library.csv")
View(data)
data <- read.csv("terms_library.csv")
View(data)
user.query <- mentions(n = 1) # this grabs mentions
test <- sapply(data$Terms, function(term) {
if (grepl(term,reply_query.df$text[1]) == TRUE) {
}
} )
test <- sapply(data$Terms, function(term) {
if (grepl(term,reply_query.df$text[1]) == TRUE) {
print(1)
}
} )
View(data)
test <- sapply(data$Terms, function(term) {
if (grepl(term,reply_query.df$text[1]) == TRUE) {
print(1)
}
} )
View(data)
user.query <- mentions(n = 1) # this grabs mentions
reply_query.df <- twListToDF(user.query)
test <- sapply(data$Terms, function(term) {
if (grepl(term,reply_query.df$text[1]) == TRUE) {
print(1)
}
} )
user.query
View(reply_query.df)
reply_query.df$text[1]
test <- sapply(data$Terms, function(term) {
if (grepl(paste("\\",term, sep = ""),reply_query.df$text[1]) == TRUE) {
print(1)
}
} )
View(data)
head(data)
data <- read.csv("terms_library.csv")
View(data)
data <- read.csv("terms_library.csv")
View(data)
test <- sapply(data$Terms, function(term) {
if (grepl(term,reply_query.df$text[1]) == TRUE) {
print(1)
}
} )
head(data$Terms)
test <- sapply(data$Terms, function(term) {
if (grepl(paste("\\", term, sep = ""),reply_query.df$text[1]) == TRUE) {
print(1)
}
} )
test <- sapply(data$Terms, function(term) {
if (grepl(paste("\", term, sep = ""),reply_query.df$text[1]) == TRUE) {
print(1)
}
} )
)
test <- sapply(data$Terms, function(term) {
if (grepl(paste("\\", term, sep = ""),reply_query.df$text[1]) == TRUE) {
print(1)
}
} )
paste("\\", data$Terms[1], sep = "")
test <- sapply(data$Terms, function(term) {
if (grepl(paste("\*", term, sep = ""),reply_query.df$text[1]) == TRUE) {
print(1)
}
} )
test <- sapply(data$Terms, function(term) {
if (grepl(paste("\*", term, sep = ""),reply_query.df$text[1]) == TRUE) {
test <- sapply(data$Terms, function(term) {
if (grepl(paste("\\", term, sep = ""),reply_query.df$text[1]) == TRUE) {
print(1)
}
} )
test <- sapply(data$Terms, function(term) {
if (grepl(paste("\+", term, sep = ""),reply_query.df$text[1]) == TRUE) {
print(1)
}
} )
test <- sapply(data$Terms, function(term) {
if (grepl(term, reply_query.df$text[1]) == TRUE) {
print(1)
}
} )
test <- sapply(data$Terms, function(term)) {
if (grepl(term, reply_query.df$text[1]) == TRUE) {
print(1)
}
} )
test <- sapply(data$Terms, function(term) {
if (grepl(term, reply_query.df$text[1]) == TRUE) {
print(1)
}
} )
library(tm)
test <- sapply(data$Terms, function(term) {
if (grepl(term, reply_query.df$text[1]) == TRUE) {
print(1)
}
} )
test <- sapply(data$Terms, function(term) {
if (grepl(term, reply_query.df$text[1]) == TRUE) {
print(1)
}
else print(0)
} )
test
View(data)
View(data)
library(tm)
library(GuardianR)
library(twitteR)
cKey <- "w6mhC51nNQv3bA1jou1AnMpOg"
cSecret <- "bD5AsWU2lce9lIe102e0yNt0GqbB970b39CLqZLwqH2dTCzAWG"
aToken <- "761983471665512448-YnVGf1zyVAEXuDdkAnLqcKFB6m3L0IR"
aSecret <- "FhBhkAJlWZEitBDkTidz5mFiIzhlFFuVR8ochpIQfI673"
setup_twitter_oauth(cKey, cSecret, aToken, aSecret)
data <- read.csv("terms_library.csv")
View(data)
user.query <- mentions(n = 1) # this grabs mentions
reply_query.df <- twListToDF(user.query)
test <- sapply(data$Terms, function(term) {
if (grepl(term,reply_query.df$text[1]) == TRUE) {
print(1)
}
} )
test <- sapply(data$Terms, function(term) {
if (grepl(term,reply_query.df$text[1]) == TRUE) {
print(1)
}
else print(0)
} )
View(data)
rm(data[-1,])
data<-data[-1, ])
data<-data[-1, ]
test <- sapply(data$Terms, function(term) {
if (grepl(term,reply_query.df$text[1]) == TRUE) {
}
} )
test <- sapply(data$Terms, function(term) {
if (grepl(term,reply_query.df$text[1]) == TRUE) {
} else print(0)
} )
sum(test)
test <- sapply(data$Terms, function(term) {
} )
test
test <- sapply(data$Terms, function(term) {
print(0)
} )
test
sum(test)
reply_id
user.query <- mentions(n = 1) # this grabs mentions
reply_query.df <- twListToDF(user.query)
reply_id <- paste("@",reply_query.df$screenName[1], sep = "")
reply_id
reply_id <- reply_query.df$screenName[1]
reply_id
userTimeline("@tweetMoneySA", n = 20)
test <- userTimeline("@tweetMoneySA", n = 20)
test[5]
test[[5]]
class(test[[5]])
test[[5]]
recent_tweets.df <- data.frame(userTimeline("@tweetMoneySA", n = 20))
recent_tweets.df <- twListToDF(userTimeline("@tweetMoneySA", n = 20))
recent_tweets.df
view(recent_tweets.df)
View(recent_tweets.df)
recent_tweets.df$text[5]
recent_tweets.df$text
sub("\\s+","" ,recent_tweets.df$text[5])
sub("\\s+.","" ,recent_tweets.df$text[5])
sub("\\s*.","" ,recent_tweets.df$text[5])
sub("\\s+.","" ,recent_tweets.df$text[5])
sub("\\s+$","" ,recent_tweets.df$text[5])
sub("\\s$","" ,recent_tweets.df$text[5])
sub("\\s*$","" ,recent_tweets.df$text[5])
sub("s*$","" ,recent_tweets.df$text[5])
sub("\\w+$","" ,recent_tweets.df$text[5])
sub("\\w+","" ,recent_tweets.df$text[5])
sub("\\[^w+]","" ,recent_tweets.df$text[5])
sub("\\[^[w+]]","" ,recent_tweets.df$text[5])
sub("^([\w\-]+)","" ,recent_tweets.df$text[5])
sub("^([w-]+)","" ,recent_tweets.df$text[5])
sub("\\^([w-]+)","" ,recent_tweets.df$text[5])
gsub("^([\w\-]+)","" ,recent_tweets.df$text[5])
sub("^([\w-]+)","" ,recent_tweets.df$text[5])
sub("^([w-]+)","" ,recent_tweets.df$text[5])
sub("^([w\-]+)","" ,recent_tweets.df$text[5])
sub("^([w-]+)","" ,recent_tweets.df$text[5])
sub("\\[w+]","" ,recent_tweets.df$text[5])
sub("\\w+","" ,recent_tweets.df$text[5])
sub("(?:^|(?:[.!?]\s))(\w+)","" ,recent_tweets.df$text[5])
sub("(?:^|(?:[.!?]s))(\w+)","" ,recent_tweets.df$text[5])
sub("(?:^|(?:[.!?]s))(w+)","" ,recent_tweets.df$text[5])
sub("^\s*([a-zA-Z0-9]+)","" ,recent_tweets.df$text[5])
sub("^\\s*([a-zA-Z0-9]+)","" ,recent_tweets.df$text[5])
sub("^\\([a-zA-Z0-9]+)","" ,recent_tweets.df$text[5])
sub("([^\s]+)","" ,recent_tweets.df$text[5])
sub("([^\\s]+)","" ,recent_tweets.df$text[5])
sub("(^[\\s]+)","" ,recent_tweets.df$text[5])
sub("^([\\s]+)","" ,recent_tweets.df$text[5])
sub("([\\s]+)","" ,recent_tweets.df$text[5])
sub("([^\\s]*)","" ,recent_tweets.df$text[5])
sub("([^\\@]*)","" ,recent_tweets.df$text[5])
sub("([^\s]+)","" ,recent_tweets.df$text[5])
sub("([^\s]+)","" ,recent_tweets.df$text[5], perl = TRUE)
sub("([^[:blank:]]+)","" ,recent_tweets.df$text[5])
sub("(^[[:blank:]]+)","" ,recent_tweets.df$text[5])
sub("([[^:blank:]]+)","" ,recent_tweets.df$text[5])
sub("([[:blank:]]+)","" ,recent_tweets.df$text[5])
sub("([[:blank:]]+).","" ,recent_tweets.df$text[5])
sub("([[:blank:]]+)$","" ,recent_tweets.df$text[5])
sub("([[:blank:]]+):","" ,recent_tweets.df$text[5])
sub("([[:blank:]]+).*","" ,recent_tweets.df$text[5])
class(sub("([[:blank:]]+).*","" ,recent_tweets.df$text[5]))
class(reply_query.df$screenName[1])
reply_query.df$screenName[1]
sub("([[:blank:]]+).*","" ,recent_tweet.df$text[1])
recent_tweet.df <- twListToDF(userTimeline("@tweetMoneySA", n = 1))
sub("([[:blank:]]+).*","" ,recent_tweet.df$text[1])
sub("([[:blank:]]+).*","" ,recent_tweet.df$text[5])
recent_tweet.df <- twListToDF(userTimeline("@tweetMoneySA", n = 5))
recent_tweet_check <- sub("([[:blank:]]+).*","" ,recent_tweet.df$text[5])
recent_tweet_check
sub("@","", recent_tweet_check)
recent_tweet.df <- twListToDF(userTimeline("@tweetMoneySA", n = 1))
recent_tweet_check <- sub("([[:blank:]]+).*","" ,recent_tweet.df$text[1])
sub("@","", recent_tweet_check)
recent_tweet.df <- twListToDF(userTimeline("@tweetMoneySA", n = 5))
recent_tweet_check <- sub("([[:blank:]]+).*","" ,recent_tweet.df$text[5])
sub("@","", recent_tweet_check)
?tm
?agrepl
agrepl("401(k) Plan", "401k", max.distance = 0.2)
agrepl("401(k) Plan", "401k", max.distance = 0.3)
agrepl("401(k) Plan", "401k", max.distance = 0.5)
agrepl("401(k) Plan", "401k", max.distance = 0.9)
agrepl("401(k) Plan", "401k", max.distance = 0.8)
agrepl("401(k) Plan", "401k", max.distance = 0.7)
agrepl("401(k) Plan", "401k", max.distance = 0.5)
agrepl("401(k) Plan", "401k", max.distance = 0.6)
agrepl("401(k) Plan", "401k", max.distance = 0.55)
agrepl("401(k) Plan", "401k", max.distance = 0.53)
agrepl("401(k) Plan", "401k", max.distance = 0.54)
agrepl("401(k) Plan", "401k", max.distance = 0.55)
agrepl("401(k) Plan", "tell me about a 401k", max.distance = 0.55)
agrepl("401(k) Plan", "tell me about a 401k", max.distance = 0.54)
agrepl("401(k) Plan", "tell me about a 401k", max.distance = 0.55)
agrepl("401(k) Plan", "tell me about a 401 k", max.distance = 0.55)
agrepl("401(k) Plan", "tell me about a 403 k", max.distance = 0.55)
agrepl("401(k) Plan", "tell me about a 403k", max.distance = 0.55)
agrepl("401(k) Plan", "tell me about a 402k", max.distance = 0.55)
agrepl("401(k) Plan", "tell me about a 402(k)", max.distance = 0.55)
agrepl("401(k) Plan", "tell me about a 402k", max.distance = 0.55)
agrepl("401(k) Plan", "tell me about a 4023", max.distance = 0.55)
agrepl("401(k) Plan", "tell me about a 403 b", max.distance = 0.55)
agrepl("401(k) Plan", "tell me about a 403(b)", max.distance = 0.55)
agrepl("401(k) Plan", "tell me about a 403b", max.distance = 0.55)
agrepl("401(k) Plan", "tell me about a 403k", max.distance = 0.55)
agrepl("401(k) Plan", "tell me about a 401k", max.distance = 0.55)
agrepl("401(k) Plan", "tell me about a 408k", max.distance = 0.55)
library(twitteR)
cKey <- "w6mhC51nNQv3bA1jou1AnMpOg"
cSecret <- "bD5AsWU2lce9lIe102e0yNt0GqbB970b39CLqZLwqH2dTCzAWG"
aToken <- "761983471665512448-YnVGf1zyVAEXuDdkAnLqcKFB6m3L0IR"
aSecret <- "FhBhkAJlWZEitBDkTidz5mFiIzhlFFuVR8ochpIQfI673"
setup_twitter_oauth(cKey, cSecret, aToken, aSecret)
mentions(n=1)
user.query <- mentions(n = 1) # this grabs mentions
reply_query.df <- twListToDF(user.query)
View(reply_query.df)
reply_query.df$text
save(reply_query.df, file = "mentions.rda")
load("mentions.rda")
load("mentions.rda")
View(reply_query.df)
View(reply_query.df)
